# Generated by Django 5.1.7 on 2025-03-14 11:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Amenities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'amenities',
            },
        ),
        migrations.CreateModel(
            name='Areas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('capacity', models.IntegerField()),
                ('price_per_hour', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Maintenance')], default='available', max_length=20)),
            ],
            options={
                'db_table': 'areas',
            },
        ),
        migrations.CreateModel(
            name='RoomTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('capacity', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'room_types',
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=10, unique=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Maintenance')], default='available', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='property.roomtypes')),
            ],
            options={
                'db_table': 'rooms',
            },
        ),
        migrations.CreateModel(
            name='RoomTypePrices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='property.roomtypes')),
            ],
            options={
                'db_table': 'room_type_prices',
                'unique_together': {('room_type', 'valid_from')},
            },
        ),
        migrations.CreateModel(
            name='RoomTypeAmenities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_types', to='property.amenities')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amenities', to='property.roomtypes')),
            ],
            options={
                'db_table': 'room_type_amenities',
                'unique_together': {('room_type', 'amenity')},
            },
        ),
    ]
